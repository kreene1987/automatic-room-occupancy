blueprint:
  name: "[Occupancy] Auto Room Occupancy"
  description:
    "Automatically turn on and off an ocupancy switch for a single room.\n
    \n------LOGIC------\nOccupied when ANY of the following conditions are met (all are\
    \ optional).\n  - door is shut\n  - any motion\n  - any media player playing\n\
    \  - door is shut (for rooms eg bathrooms)\n  - on room presence (eg room-assistant)\n\
    \nOccupancy is cleared when ALL of the following conditions are met (all are\
    \ optional):\n  - motion off for a set amount of time\n  - no player in room played\
    \ for a set amount of time\n  - no one in room\n\n------HELPERS------\n\
    \  Uses the following helpers to allow for front end control of timeouts:\n\
    \  - input_number.door_occupancy_timeout (default: 0 mins)\n\
    \  - input_number.motion_occupancy_timeout (default: 10 mins)\n\
    \  - input_number.media_occupancy_timeout (default: 10 mins)\n\
    \  - input_number.bluetooth_occupancy_timeout (default: 10 mins)\
    \ (NOT IN USE YET)\n\
    \  - input_boolean.guest (on if guest is at home)\n\
    \  - group.household (group of all person entities in household)"
  domain: automation
  input:
    occupied_on_motion_enabled:
      name: Enable Motion Occupancy
      description: Turn on/off occupancy via motion sensor(s).
      default: true
      selector:
        boolean:
    motion_sensors:
      name: Motion Sensor(s)
      description: Motion sensor (or group of motion sensors) in the room.
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
          multiple: true
    occupied_on_shut_door:
      name: Enable Door Occupancy
      description: Turn on/off occupancy via door sensor(s).
      default: false
      selector:
        boolean:
    door_sensors:
      name: Door Sensor(s)
      description: Door sensor (or group of door sensors) for the room.
      selector:
        entity:
          domain: binary_sensor
          device_class: opening
          multiple: true
    occupied_on_media_enabled:
      name: Enable Media Occupancy
      description: Turn on/off occupancy via media player(s).
      default: false
      selector:
        boolean:
    media_players:
      name: Media Player(s)
      description: List of media player entities in room (comma separated).
      selector:
        entity:
          domain: media_player
          multiple: true
    media_states:
      name: Media State(s)
      description: Media player state(s) when room is occupied (comma separated).
      default: playing
      selector:
        text:
    occupied_on_presence_enabled:
      name: Enable Presence Occupancy
      description: Turn on/off occupancy via presence sensor(s).
      default: false
      selector:
        boolean:
    presence_entities:
      name: Presence Entity or Entities
      description: Room presence entity or entities (comma separated) to track.
      selector:
        entity:
          domain: sensor
          multiple: true
    presence_states:
      name: Presence State(s)
      description: A comma separated list of states that presence entity can match.
      default: lounge, dining room
      selector:
        text:
    disabled_entity_id:
      name: Disable Mode (Optional)
      description: An input_boolean to disable automation logic when on.
      default: none
      selector:
        entity:
          domain: input_boolean
    household_group:
      name: Household Group
      description: A grouped set of people in your house. Logic will only run if home.
      default: group.household
      selector:
        entity:
          domain: group
    guest_mode_switch:
      name: Guest Mode (Optional)
      description: An input_boolean to allow logic to work when household group is away.
      default: input_boolean.guest
      selector:
        entity:
          domain: input_boolean
    occupancy_switch:
      name: Occupancy Switch
      description:
        An input_boolean that switches occupancy state in target room.
        On = occupied and Off = not_occupied.
      default: none
      selector:
        entity:
          domain: input_boolean
  source_url: https://github.com/kreene1987/automatic-room-occupancy/blob/main/automatic-room-occupancy.yaml
variables:
  time_now: "{{ as_timestamp(now()) }}"
  media_players: !input "media_players"
  media_states: !input "media_states"
  media_timeout: "{{ states('input_number.media_occupancy_timeout') | int(10) }}"
  media_is_playing:
    "{{ expand(media_players) | selectattr('state','in', media_states)
    | list | count > 0 }}"
  presence_entities: !input "presence_entities"
  presence_states: !input "presence_states"
  presence_timeout:
    "{{ states('input_number.bluetooth_occupancy_timeout') | int(10)
    }}"
  in_room:
    "{{ expand(presence_entities) | selectattr('state','in', presence_states)
    | list | count > 0 }}"
  motion_sensors: !input "motion_sensors"
  motion_timeout:
    "{{ states('input_number.motion_occupancy_timeout') | float(10)
    }}"
  motion_last_changed:
    "{{ states[motion_sensors].last_changed.timestamp() | float(0)
    }}"
  motion_is_timed_out:
    "{{ (time_now - motion_last_changed) > (motion_timeout * 60)
    }}"
  is_motion: "{{ expand(motion_sensors) | selectattr('state','eq', 'on')
    | list | count > 0 }}"
  door_sensors: !input "door_sensors"
  door_shut:     "{{ expand(door_sensors) | selectattr('state','eq', 'off')
    | list | count > 0 }}"
  occupied_on_motion_enabled: !input "occupied_on_motion_enabled"
  occupied_on_shut_door_enabled: !input "occupied_on_shut_door"
  occupied_on_media_enabled: !input "occupied_on_media_enabled"
  occupied_on_presence_enabled: !input "occupied_on_presence_enabled"
  disabled_entity_id: !input "disabled_entity_id"
  blueprint_disabled:
    "{{ disabled_entity_id != 'none' and is_state(disabled_entity_id,
    'on') }}"
  household_group: !input "household_group"
  guest_mode_switch: !input "guest_mode_switch"
  house_home: "{{ household_group == 'none' or is_state(household_group, 'home')
    }}"
  guests_home:
    "{{ guest_mode_switch == 'none' or is_state(guest_mode_switch, 'on')
    }}"
  at_home: "{{ house_home or guests_home }}"
mode: parallel
trigger:
  - platform: state
    entity_id: !input "door_sensors"
    to: "off"
  - platform: state
    entity_id: !input "door_sensors"
    to: "on"
    for:
      minutes: "{{ states('input_number.door_occupancy_timeout') | int(0) }}"
  - platform: state
    entity_id: !input "motion_sensors"
    to: "on"
  - platform: state
    entity_id: !input "motion_sensors"
    to: "off"
    for:
      minutes: "{{ states('input_number.motion_occupancy_timeout') | int(10) }}"
  - platform: state
    entity_id: !input "media_players"
  - platform: state
    entity_id: !input "presence_entities"
    from:
condition:
  - "{{ not blueprint_disabled }}"
action:
  - choose:
      - conditions:
          - "{{ occupied_on_shut_door_enabled }}"
          - "{{ door_shut }}"
          - "{{ at_home }}"
        sequence:
          - service: input_boolean.turn_on
            data:
              entity_id: !input "occupancy_switch"
      - conditions:
          - "{{ occupied_on_motion_enabled }}"
          - "{{ is_motion }}"
          - "{{ at_home }}"
        sequence:
          - service: input_boolean.turn_on
            data:
              entity_id: !input "occupancy_switch"
      - conditions:
          - "{{ occupied_on_media_enabled }}"
          - "{{ media_is_playing }}"
          - "{{ at_home }}"
        sequence:
          - service: input_boolean.turn_on
            data:
              entity_id: !input "occupancy_switch"
      - conditions:
          - "{{ occupied_on_presence_enabled }}"
          - "{{ in_room }}"
          - "{{ at_home }}"
        sequence:
          - service: input_boolean.turn_on
            data:
              entity_id: !input "occupancy_switch"
      - conditions:
          - "{{ not at_home }}"
        sequence:
          - service: input_boolean.turn_off
            data:
              entity_id: !input "occupancy_switch"
      - conditions:
          - "{{ not is_motion }}"
          - "{{ motion_is_timed_out }}"
          - "{% set t = (time_now - media_timeout) * 60 %} {% set ns = namespace(not_playing=[])\
            \ %} {% for player in media_players %}\n  {% for state in media_states %}\n\
            \    {% if states[player].last_changed is defined %}\n      {% set timed_out\
            \ = states[player].last_changed.timestamp() < t %}\n    {% else %}\n      {%\
            \ set timed_out = true %}\n    {% endif %}\n    {% if states(player) != state\
            \ and timed_out %}\n      {% set ns.not_playing = ns.not_playing + [ player.entity_id\
            \ ] %}\n    {% endif %}\n  {% endfor %}\n{% endfor %} {{ ns.not_playing | length\
            \ >= media_players | length }}\n"
          - "{{ not in_room }}"
        sequence:
          - service: input_boolean.turn_off
            data:
              entity_id: !input "occupancy_switch"
